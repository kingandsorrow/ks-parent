<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.ks.sso.provider.database.mapper.KsUserAuthsMapper">
    <resultMap id="BaseResultMap" type="top.ks.sso.provider.database.model.KsUserAuths">
        <id column="auths_id" property="authsId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="identity_type" property="identityType" jdbcType="TINYINT"/>
        <result column="identifier" property="identifier" jdbcType="VARCHAR"/>
        <result column="credential" property="credential" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    auths_id, user_id, identity_type, identifier, credential, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ks_user_auths
        where auths_id = #{authsId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ks_user_auths
    where auths_id = #{authsId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="top.ks.sso.provider.database.model.KsUserAuths">
    insert into ks_user_auths (auths_id, user_id, identity_type, 
      identifier, credential, create_time, 
      update_time)
    values (#{authsId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{identityType,jdbcType=TINYINT}, 
      #{identifier,jdbcType=VARCHAR}, #{credential,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="top.ks.sso.provider.database.model.KsUserAuths">
        insert into ks_user_auths
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="authsId != null">
                auths_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="identityType != null">
                identity_type,
            </if>
            <if test="identifier != null">
                identifier,
            </if>
            <if test="credential != null">
                credential,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="authsId != null">
                #{authsId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                #{identityType,jdbcType=TINYINT},
            </if>
            <if test="identifier != null">
                #{identifier,jdbcType=VARCHAR},
            </if>
            <if test="credential != null">
                #{credential,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.ks.sso.provider.database.model.KsUserAuths">
        update ks_user_auths
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                identity_type = #{identityType,jdbcType=TINYINT},
            </if>
            <if test="identifier != null">
                identifier = #{identifier,jdbcType=VARCHAR},
            </if>
            <if test="credential != null">
                credential = #{credential,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where auths_id = #{authsId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.ks.sso.provider.database.model.KsUserAuths">
    update ks_user_auths
    set user_id = #{userId,jdbcType=VARCHAR},
      identity_type = #{identityType,jdbcType=TINYINT},
      identifier = #{identifier,jdbcType=VARCHAR},
      credential = #{credential,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where auths_id = #{authsId,jdbcType=VARCHAR}
  </update>
    <select id="selectByPhoneWay" parameterType="String" resultType="KsUser">
    select
    a.auths_id as authsId, a.user_id as userId, a.identity_type as identityType, a.identifier as identifier, a.credential as credential, a.create_time as createTime, a.update_time as updateTime,
    b.phone,b.gender,b.nick_name as nickName,b.head_img as headImg,b.province_id as provinceId,b.city_id as cityId,b.regist_from as registFrom,b.frezz_type as frezzType,b.is_robot as isRobot,b.other_info as otherInfo
    from ks_user_auths a join ks_user b on a.user_id =b.user_id
    where a.identifier = #{phone,jdbcType=VARCHAR}
  </select>
</mapper>